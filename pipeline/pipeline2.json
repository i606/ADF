{
	"name": "pipeline2",
	"properties": {
		"activities": [
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "CosmosDbMongoDbApiSource",
						"batchSize": 100
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings",
							"copyBehavior": "FlattenHierarchy"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "CosmosDbMongoDbApiCollection1",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Parquet1",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Copy data2",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy data1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ParquetSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true
						}
					},
					"sink": {
						"type": "SqlDWSink",
						"allowPolyBase": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['_id']['$oid']"
								},
								"sink": {
									"name": "_id",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['policyId']"
								},
								"sink": {
									"name": "policyId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['submissionId']"
								},
								"sink": {
									"name": "submissionId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['documents'][0]['document']"
								},
								"sink": {
									"name": "document",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['documents'][0]['documentContext']"
								},
								"sink": {
									"name": "documentContext",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['documents'][0]['referenceDocumentId']"
								},
								"sink": {
									"name": "referenceDocumenId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['submissionsVersion']"
								},
								"sink": {
									"name": "submissionVersion",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['parties'][0]['status']"
								},
								"sink": {
									"name": "status",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['parties'][0]['partyId']"
								},
								"sink": {
									"name": "partyId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['parties'][0]['policyRole']"
								},
								"sink": {
									"name": "policyRole",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['parties'][0]['updateTime']"
								},
								"sink": {
									"name": "updateTime",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['parties'][0]['IPAddress']"
								},
								"sink": {
									"name": "IPAddress",
									"type": "String"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "Parquet1",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AzureSqlDWTable1",
						"type": "DatasetReference"
					}
				]
			}
		],
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}