{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "legendarydfv2"
		},
		"AzureBatch1_accessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accessKey' of 'AzureBatch1'"
		},
		"AzureBlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage'"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureBlobStorage2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage2'"
		},
		"AzureDataLakeAnalytics_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'AzureDataLakeAnalytics'"
		},
		"AzureDataLakeStorageGen2_servicePrincipalCredential": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalCredential' of 'AzureDataLakeStorageGen2'"
		},
		"AzureDatabricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks'"
		},
		"AzureFunction_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'AzureFunction'"
		},
		"AzureFunction1_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'AzureFunction1'"
		},
		"AzureMySql1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureMySql1'"
		},
		"AzureSqlDW_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDW'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"AzureSqlDatabase2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase2'"
		},
		"AzureStorage2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureStorage2'"
		},
		"AzureTableStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureTableStorage'"
		},
		"AzureTableStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureTableStorage1'"
		},
		"CosmosDbMongoDb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDbMongoDb'"
		},
		"CosmosDbMongoDbApi_Ankita1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDbMongoDbApi_Ankita1'"
		},
		"CosmosDbMongoDbApi_Ankita2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDbMongoDbApi_Ankita2'"
		},
		"FileServer1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'FileServer1'"
		},
		"FtpServer1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'FtpServer1'"
		},
		"HDI_Spark_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'HDI_Spark'"
		},
		"Kusto1_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'Kusto1'"
		},
		"MySql1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'MySql1'"
		},
		"OData1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'OData1'"
		},
		"Odbc_MySQL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Odbc_MySQL'"
		},
		"Odbc_MySQL_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Odbc_MySQL'"
		},
		"Oracle_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Oracle'"
		},
		"RestService_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'RestService'"
		},
		"RestService1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'RestService1'"
		},
		"RestService2_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'RestService2'"
		},
		"RestServiceGraph_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'RestServiceGraph'"
		},
		"Salesforce1_securityToken": {
			"type": "secureString",
			"metadata": "Secure string for 'securityToken' of 'Salesforce1'"
		},
		"Salesforce2_username": {
			"type": "secureString",
			"metadata": "Secure string for 'username' of 'Salesforce2'"
		},
		"Salesforce2_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Salesforce2'"
		},
		"Salesforce2_SecurityToken": {
			"type": "secureString",
			"metadata": "Secure string for 'SecurityToken' of 'Salesforce2'"
		},
		"linkedservice_spark_clusterPassword": {
			"type": "secureString",
			"metadata": "Secure string for 'clusterPassword' of 'linkedservice_spark'"
		},
		"linkedservice_spark_clusterSshPassword": {
			"type": "secureString",
			"metadata": "Secure string for 'clusterSshPassword' of 'linkedservice_spark'"
		},
		"linkedservice_spark_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'linkedservice_spark'"
		},
		"AzureBlob1_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "test.json"
		},
		"AzureBlob1_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "empty"
		},
		"AzureBlob2_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "murugesan.json"
		},
		"AzureBlob2_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "custom"
		},
		"AzureBlob3_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "odin_fullrefresh_daily.json"
		},
		"AzureBlob3_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "legendarycontainer"
		},
		"DestinationDataset_ADLS_Gen1_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "Test"
		},
		"DestinationDataset_eqt_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ""
		},
		"DestinationDataset_eqt_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "Test123"
		},
		"AzureBatch1_properties_typeProperties_accountName": {
			"type": "string",
			"defaultValue": "legendary"
		},
		"AzureBatch1_properties_typeProperties_batchUri": {
			"type": "string",
			"defaultValue": "https://legendary.eastus.batch.azure.com"
		},
		"AzureBatch1_properties_typeProperties_poolName": {
			"type": "string",
			"defaultValue": "custom-activity-pool"
		},
		"AzureBlobStorage3_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://legendaryfilestorage.blob.core.windows.net"
		},
		"AzureDataLakeAnalytics_properties_typeProperties_accountName": {
			"type": "string",
			"defaultValue": "legendary"
		},
		"AzureDataLakeAnalytics_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "be56f591-badf-4c64-aaec-ca647c49ab9d"
		},
		"AzureDataLakeAnalytics_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47"
		},
		"AzureDataLakeAnalytics_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "f935bcc8-a30f-4fbe-9ccf-c7a8c47067ef"
		},
		"AzureDataLakeAnalytics_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "jijo"
		},
		"AzureDataLakeStorageGen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://legendaryadlsgen2.dfs.core.windows.net"
		},
		"AzureDataLakeStorageGen2_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47"
		},
		"AzureDataLakeStorageGen2_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "be56f591-badf-4c64-aaec-ca647c49ab9d"
		},
		"AzureDataLakeStore1_properties_typeProperties_dataLakeStoreUri": {
			"type": "string",
			"defaultValue": "https://legendaryadls.azuredatalakestore.net/webhdfs/v1"
		},
		"AzureDataLakeStore1_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47"
		},
		"AzureDataLakeStore1_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "f935bcc8-a30f-4fbe-9ccf-c7a8c47067ef"
		},
		"AzureDataLakeStore1_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "jijo"
		},
		"AzureDataLakeStore2_properties_typeProperties_dataLakeStoreUri": {
			"type": "string",
			"defaultValue": "https://legendaryadls.azuredatalakestore.net/webhdfs/v1"
		},
		"AzureDataLakeStore2_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47"
		},
		"AzureDataLakeStore2_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "f935bcc8-a30f-4fbe-9ccf-c7a8c47067ef"
		},
		"AzureDataLakeStore2_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "jijo"
		},
		"AzureDataLakeStoreCosmosStructuredStream1_properties_typeProperties_accountName": {
			"type": "string",
			"defaultValue": "sducvsduhbchd"
		},
		"AzureDataLakeStoreCosmosStructuredStream1_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47"
		},
		"AzureDataLakeStoreCosmosStructuredStream1_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "sdcdchiwd"
		},
		"AzureDataLakeStoreCosmosStructuredStream1_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "shdw"
		},
		"AzureFunction_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://legendary1234.azurewebsites.net"
		},
		"AzureFunction1_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://durablefunctions123.azurewebsites.net"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://Legendary.vault.azure.net/"
		},
		"CosmosDbMongoDb_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "affirmationDetails"
		},
		"CosmosDbMongoDbApi_Ankita1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "ankita"
		},
		"CosmosDbMongoDbApi_Ankita2_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "ankita"
		},
		"FileServer1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "\\\\legendaryfilestorage.file.core.windows.net\\chutiaji"
		},
		"FileServer1_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "legendaryfilestorage"
		},
		"FtpServer1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "ftp.isoftix.com"
		},
		"FtpServer1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "u711360529.testopenftp"
		},
		"HDI_Spark_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "admin"
		},
		"HttpServer1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://efs010.effacts.com/effacts/rest/v1/CountryState?fields=id,description"
		},
		"Kusto1_properties_typeProperties_endpoint": {
			"type": "string",
			"defaultValue": "https://xxxx.com"
		},
		"Kusto1_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "12346777"
		},
		"OData1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https:///xxxxx"
		},
		"OData1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "xxx"
		},
		"Odbc_MySQL_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "root"
		},
		"RestService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://efs010.effacts.com/effacts/rest/v2/auth/basic?integratorKey=c2502ac2-d89b-4f8e-af8f-74767cf4d96a&context=684"
		},
		"RestService_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "SER_EDL_DEV"
		},
		"RestService1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "linkedService().URL"
		},
		"RestService1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "devnetuser"
		},
		"RestService2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://legendary.vault.azure.net/secrets/REST/cfadc277cd5247fba00f31226cd26ff8"
		},
		"RestService2_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "devnetuser"
		},
		"RestService3_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://efs010.effacts.com/effacts/rest"
		},
		"RestServiceGraph_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://graph.microsoft.com/beta/reports/getTeamsDeviceUsageUserDetail(date=@linkedService().Date)?$format=application/json "
		},
		"RestServiceGraph_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "99aee3cf-e649-40d5-9232-b7e565a55a4e"
		},
		"Salesforce1_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "https://login.salesforce.com"
		},
		"Salesforce1_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "user"
		},
		"Salesforce2_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "https://test.salesforce.com"
		},
		"Salesforce2_properties_typeProperties_username": {
			"type": "string"
		},
		"linkedservice_spark_properties_typeProperties_hostSubscriptionId": {
			"type": "string",
			"defaultValue": "f935bcc8-a30f-4fbe-9ccf-c7a8c47067ef"
		},
		"linkedservice_spark_properties_typeProperties_clusterResourceGroup": {
			"type": "string",
			"defaultValue": "jijo"
		},
		"linkedservice_spark_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "legendaryspn"
		},
		"linkedservice_spark_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47"
		},
		"linkedservice_spark_properties_typeProperties_clusterUserName": {
			"type": "string",
			"defaultValue": "atlas"
		},
		"linkedservice_spark_properties_typeProperties_clusterSshUserName": {
			"type": "string",
			"defaultValue": "atlas"
		},
		"Event_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/f935bcc8-a30f-4fbe-9ccf-c7a8c47067ef/resourceGroups/jijo/providers/Microsoft.Storage/storageAccounts/legendaryadlsgen2"
		},
		"AzureBlobStorage1_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/f935bcc8-a30f-4fbe-9ccf-c7a8c47067ef/resourceGroups/jijo/providers/Microsoft.Storage/storageAccounts/legendarygeneration2"
		},
		"AzureBlobStorage1_properties_groupId": {
			"type": "string",
			"defaultValue": "blob"
		},
		"AzureBlobStorage1_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"legendarygeneration2.blob.core.windows.net"
			]
		},
		"AzureBlobStorage2_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/f935bcc8-a30f-4fbe-9ccf-c7a8c47067ef/resourceGroups/Vivek/providers/Microsoft.Storage/storageAccounts/blobstorage100"
		},
		"AzureBlobStorage2_properties_groupId": {
			"type": "string",
			"defaultValue": "blob"
		},
		"AzureBlobStorage3_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/f935bcc8-a30f-4fbe-9ccf-c7a8c47067ef/resourceGroups/jijo/providers/Microsoft.Storage/storageAccounts/legendaryadlsgen2"
		},
		"AzureBlobStorage3_properties_groupId": {
			"type": "string",
			"defaultValue": "blob"
		},
		"AzureBlobStorage3_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"legendaryadlsgen2.blob.core.windows.net"
			]
		},
		"AzureDataLakeStorage_Gen2_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/f935bcc8-a30f-4fbe-9ccf-c7a8c47067ef/resourceGroups/jijo/providers/Microsoft.Storage/storageAccounts/legendarygeneration2"
		},
		"AzureDataLakeStorage_Gen2_properties_groupId": {
			"type": "string",
			"defaultValue": "dfs"
		},
		"AzureDataLakeStorage_Gen2_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"legendarygeneration2.dfs.core.windows.net"
			]
		},
		"LegendaryGen2_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/f935bcc8-a30f-4fbe-9ccf-c7a8c47067ef/resourceGroups/jijo/providers/Microsoft.Storage/storageAccounts/legendarygen2"
		},
		"LegendaryGen2_properties_groupId": {
			"type": "string",
			"defaultValue": "blob"
		},
		"LegendaryGen2_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"legendarygen2.blob.core.windows.net"
			]
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipelinefor Text')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_p0k",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "test//gunjan.txt"
							},
							{
								"name": "Destination",
								"value": "testempty//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": "0"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_p0k",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-05-28T11:12:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_p0k')]",
				"[concat(variables('factoryId'), '/datasets/TSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_Rest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.id",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "@{item().measurements}",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "RestResource",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DelimitedText_ADLS_Gen2",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"id": {
						"type": "array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-12-23T12:53:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText_ADLS_Gen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_empty_folders')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Foreach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value[0].sites[0].block",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Copy_Rest",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"id": {
												"value": "@item().assetlist",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"variables": {
					"BLOCK": {
						"type": "Array"
					},
					"ASSETLIST": {
						"type": "Array"
					},
					"ID": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-05-28T11:12:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json1')]",
				"[concat(variables('factoryId'), '/pipelines/Copy_Rest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Cosmos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"dataset": {
								"referenceName": "AzureBlob1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@array(activity('Get Metadata1').output.columnCount)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 2
									}
								}
							]
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AzureBlob1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"columnCount"
							]
						}
					}
				],
				"variables": {
					"test": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-03-17T09:40:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureBlob1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ForEach')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DelimitedText5",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('URL')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET"
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "RestResource1",
											"type": "DatasetReference",
											"parameters": {
												"URL": {
													"value": "@item().URL",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureBlob1",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "URL",
							"value": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							}
						}
					}
				],
				"variables": {
					"URL": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-11-15T17:40:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText5')]",
				"[concat(variables('factoryId'), '/datasets/RestResource1')]",
				"[concat(variables('factoryId'), '/datasets/AzureBlob1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline5')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Wait2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Wait2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"dataset": {
								"referenceName": "AzureBlob1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Wait3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-01-06T10:42:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureBlob1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Avro')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Avro",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "21 (1).avro",
						"container": "empty"
					}
				},
				"schema": {
					"type": "record",
					"name": "Microsoft.ServiceBus.Messaging.EventData",
					"fields": [
						{
							"name": "SequenceNumber",
							"type": "long"
						},
						{
							"name": "Offset",
							"type": "string"
						},
						{
							"name": "EnqueuedTimeUtc",
							"type": "string"
						},
						{
							"name": "SystemProperties",
							"type": {
								"type": "map",
								"values": [
									"long",
									"double",
									"string",
									"bytes"
								]
							}
						},
						{
							"name": "Properties",
							"type": {
								"type": "map",
								"values": [
									"long",
									"double",
									"string",
									"bytes",
									"null"
								]
							}
						},
						{
							"name": "Body",
							"type": [
								"null",
								"bytes"
							]
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlob1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "ParquetFormat"
					},
					"fileName": "[parameters('AzureBlob1_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('AzureBlob1_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlob2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "ingestion_config.source",
						"type": "String"
					},
					{
						"name": "ingestion_config.app",
						"type": "String"
					},
					{
						"name": "ingestion_config.home_dir",
						"type": "String"
					},
					{
						"name": "ingestion_config.feed_id",
						"type": "String"
					},
					{
						"name": "ingestion_config.seq_type",
						"type": "String"
					},
					{
						"name": "ingestion_config.file_sensor.expected_ext",
						"type": "String"
					},
					{
						"name": "ingestion_config.file_sensor.expected_ext_count",
						"type": "Int64"
					},
					{
						"name": "ingestion_config.location.base_dir",
						"type": "String"
					},
					{
						"name": "ingestion_config.location.input_dir",
						"type": "String"
					},
					{
						"name": "ingestion_config.location.error_dir",
						"type": "String"
					},
					{
						"name": "ingestion_config.location.archive_dir",
						"type": "String"
					},
					{
						"name": "ingestion_config.location.unzipped_dir",
						"type": "String"
					},
					{
						"name": "ingestion_config.start_sequence.initial_seq_id",
						"type": "String"
					},
					{
						"name": "ingestion_config.start_sequence.length",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.config_path",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.cdc",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.format",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.delimiter",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.config_path",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.cdc",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.format",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.delimiter",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.config_path",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.cdc",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.format",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.delimiter",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.validation.file_date_format",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.cdc_config.history_table",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.cdc_config.active_table",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.cdc_config.key_cols",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.cdc_config.update_ts_col",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.cdc_config.custom_cdc_query",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.validation.file_date_format",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.cdc_config.history_table",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.cdc_config.active_table",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.cdc_config.key_cols",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.cdc_config.update_ts_col",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.cdc_config.custom_cdc_query",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.validation.file_date_format",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.cdc_config.history_table",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.cdc_config.active_table",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.cdc_config.key_cols",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.cdc_config.update_ts_col",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.cdc_config.custom_cdc_query",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.validation.triplet_check.file_pattern",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.validation.triplet_check.file_extensions",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.validation.triplet_check.file_count",
						"type": "Int64"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.validation.record_count_validation.header",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.validation.record_count_validation.footer",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.validation.record_count_validation.rec_cnt_pos_ctl",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.validation.triplet_check.file_pattern",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.validation.triplet_check.file_extensions",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.validation.triplet_check.file_count",
						"type": "Int64"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.validation.record_count_validation.header",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.validation.record_count_validation.footer",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.validation.record_count_validation.rec_cnt_pos_ctl",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.validation.triplet_check.file_pattern",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.validation.triplet_check.file_extensions",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.validation.triplet_check.file_count",
						"type": "Int64"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.validation.record_count_validation.header",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.validation.record_count_validation.footer",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.validation.record_count_validation.rec_cnt_pos_ctl",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "JsonFormat"
					},
					"fileName": "[parameters('AzureBlob2_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('AzureBlob2_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlob3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "JsonFormat",
						"jsonNodeReference": "$.['ingestion_config']['datafeed']['lookup_category']['cdc_config']['key_cols']",
						"jsonPathDefinition": {
							"ingestion_config.source": "$.['ingestion_config']['source']",
							"ingestion_config.app": "$.['ingestion_config']['app']",
							"ingestion_config.home_dir": "$.['ingestion_config']['home_dir']",
							"ingestion_config.feed_id": "$.['ingestion_config']['feed_id']",
							"ingestion_config.seq_type": "$.['ingestion_config']['seq_type']",
							"ingestion_config.file_sensor.expected_ext": "$.['ingestion_config']['file_sensor']['expected_ext']",
							"ingestion_config.file_sensor.expected_ext_count": "$.['ingestion_config']['file_sensor']['expected_ext_count']",
							"ingestion_config.location.base_dir": "$.['ingestion_config']['location']['base_dir']",
							"ingestion_config.location.input_dir": "$.['ingestion_config']['location']['input_dir']",
							"ingestion_config.location.error_dir": "$.['ingestion_config']['location']['error_dir']",
							"ingestion_config.location.archive_dir": "$.['ingestion_config']['location']['archive_dir']",
							"ingestion_config.location.unzipped_dir": "$.['ingestion_config']['location']['unzipped_dir']",
							"ingestion_config.start_sequence.initial_seq_id": "$.['ingestion_config']['start_sequence']['initial_seq_id']",
							"ingestion_config.start_sequence.length": "$.['ingestion_config']['start_sequence']['length']",
							"ingestion_config.datafeed.lookup_category.config_path": "$.['ingestion_config']['datafeed']['lookup_category']['config_path']",
							"ingestion_config.datafeed.lookup_category.cdc": "$.['ingestion_config']['datafeed']['lookup_category']['cdc']",
							"ingestion_config.datafeed.lookup_category.format": "$.['ingestion_config']['datafeed']['lookup_category']['format']",
							"ingestion_config.datafeed.lookup_category.delimiter": "$.['ingestion_config']['datafeed']['lookup_category']['delimiter']",
							"ingestion_config.datafeed.lookup_reference.config_path": "$.['ingestion_config']['datafeed']['lookup_reference']['config_path']",
							"ingestion_config.datafeed.lookup_reference.cdc": "$.['ingestion_config']['datafeed']['lookup_reference']['cdc']",
							"ingestion_config.datafeed.lookup_reference.format": "$.['ingestion_config']['datafeed']['lookup_reference']['format']",
							"ingestion_config.datafeed.lookup_reference.delimiter": "$.['ingestion_config']['datafeed']['lookup_reference']['delimiter']",
							"ingestion_config.datafeed.lookup_translation.config_path": "$.['ingestion_config']['datafeed']['lookup_translation']['config_path']",
							"ingestion_config.datafeed.lookup_translation.cdc": "$.['ingestion_config']['datafeed']['lookup_translation']['cdc']",
							"ingestion_config.datafeed.lookup_translation.format": "$.['ingestion_config']['datafeed']['lookup_translation']['format']",
							"ingestion_config.datafeed.lookup_translation.delimiter": "$.['ingestion_config']['datafeed']['lookup_translation']['delimiter']",
							"ingestion_config.datafeed.lookup_category.validation.file_date_format": "$.['ingestion_config']['datafeed']['lookup_category']['validation']['file_date_format']",
							"ingestion_config.datafeed.lookup_category.cdc_config.history_table": "$.['ingestion_config']['datafeed']['lookup_category']['cdc_config']['history_table']",
							"ingestion_config.datafeed.lookup_category.cdc_config.active_table": "$.['ingestion_config']['datafeed']['lookup_category']['cdc_config']['active_table']",
							"ingestion_config.datafeed.lookup_category.cdc_config.key_cols": "$.['ingestion_config']['datafeed']['lookup_category']['cdc_config']['key_cols']",
							"ingestion_config.datafeed.lookup_category.cdc_config.update_ts_col": "$.['ingestion_config']['datafeed']['lookup_category']['cdc_config']['update_ts_col']",
							"ingestion_config.datafeed.lookup_category.cdc_config.custom_cdc_query": "$.['ingestion_config']['datafeed']['lookup_category']['cdc_config']['custom_cdc_query']",
							"ingestion_config.datafeed.lookup_reference.validation.file_date_format": "$.['ingestion_config']['datafeed']['lookup_reference']['validation']['file_date_format']",
							"ingestion_config.datafeed.lookup_reference.cdc_config.history_table": "$.['ingestion_config']['datafeed']['lookup_reference']['cdc_config']['history_table']",
							"ingestion_config.datafeed.lookup_reference.cdc_config.active_table": "$.['ingestion_config']['datafeed']['lookup_reference']['cdc_config']['active_table']",
							"ingestion_config.datafeed.lookup_reference.cdc_config.key_cols": "$.['ingestion_config']['datafeed']['lookup_reference']['cdc_config']['key_cols']",
							"ingestion_config.datafeed.lookup_reference.cdc_config.update_ts_col": "$.['ingestion_config']['datafeed']['lookup_reference']['cdc_config']['update_ts_col']",
							"ingestion_config.datafeed.lookup_reference.cdc_config.custom_cdc_query": "$.['ingestion_config']['datafeed']['lookup_reference']['cdc_config']['custom_cdc_query']",
							"ingestion_config.datafeed.lookup_translation.validation.file_date_format": "$.['ingestion_config']['datafeed']['lookup_translation']['validation']['file_date_format']",
							"ingestion_config.datafeed.lookup_translation.cdc_config.history_table": "$.['ingestion_config']['datafeed']['lookup_translation']['cdc_config']['history_table']",
							"ingestion_config.datafeed.lookup_translation.cdc_config.active_table": "$.['ingestion_config']['datafeed']['lookup_translation']['cdc_config']['active_table']",
							"ingestion_config.datafeed.lookup_translation.cdc_config.key_cols": "$.['ingestion_config']['datafeed']['lookup_translation']['cdc_config']['key_cols']",
							"ingestion_config.datafeed.lookup_translation.cdc_config.update_ts_col": "$.['ingestion_config']['datafeed']['lookup_translation']['cdc_config']['update_ts_col']",
							"ingestion_config.datafeed.lookup_translation.cdc_config.custom_cdc_query": "$.['ingestion_config']['datafeed']['lookup_translation']['cdc_config']['custom_cdc_query']",
							"ingestion_config.datafeed.lookup_category.validation.triplet_check.file_pattern": "$.['ingestion_config']['datafeed']['lookup_category']['validation']['triplet_check']['file_pattern']",
							"ingestion_config.datafeed.lookup_category.validation.triplet_check.file_extensions": "$.['ingestion_config']['datafeed']['lookup_category']['validation']['triplet_check']['file_extensions']",
							"ingestion_config.datafeed.lookup_category.validation.triplet_check.file_count": "$.['ingestion_config']['datafeed']['lookup_category']['validation']['triplet_check']['file_count']",
							"ingestion_config.datafeed.lookup_category.validation.record_count_validation.header": "$.['ingestion_config']['datafeed']['lookup_category']['validation']['record_count_validation']['header']",
							"ingestion_config.datafeed.lookup_category.validation.record_count_validation.footer": "$.['ingestion_config']['datafeed']['lookup_category']['validation']['record_count_validation']['footer']",
							"ingestion_config.datafeed.lookup_category.validation.record_count_validation.rec_cnt_pos_ctl": "$.['ingestion_config']['datafeed']['lookup_category']['validation']['record_count_validation']['rec_cnt_pos_ctl']",
							"ingestion_config.datafeed.lookup_reference.validation.triplet_check.file_pattern": "$.['ingestion_config']['datafeed']['lookup_reference']['validation']['triplet_check']['file_pattern']",
							"ingestion_config.datafeed.lookup_reference.validation.triplet_check.file_extensions": "$.['ingestion_config']['datafeed']['lookup_reference']['validation']['triplet_check']['file_extensions']",
							"ingestion_config.datafeed.lookup_reference.validation.triplet_check.file_count": "$.['ingestion_config']['datafeed']['lookup_reference']['validation']['triplet_check']['file_count']",
							"ingestion_config.datafeed.lookup_reference.validation.record_count_validation.header": "$.['ingestion_config']['datafeed']['lookup_reference']['validation']['record_count_validation']['header']",
							"ingestion_config.datafeed.lookup_reference.validation.record_count_validation.footer": "$.['ingestion_config']['datafeed']['lookup_reference']['validation']['record_count_validation']['footer']",
							"ingestion_config.datafeed.lookup_reference.validation.record_count_validation.rec_cnt_pos_ctl": "$.['ingestion_config']['datafeed']['lookup_reference']['validation']['record_count_validation']['rec_cnt_pos_ctl']",
							"ingestion_config.datafeed.lookup_translation.validation.triplet_check.file_pattern": "$.['ingestion_config']['datafeed']['lookup_translation']['validation']['triplet_check']['file_pattern']",
							"ingestion_config.datafeed.lookup_translation.validation.triplet_check.file_extensions": "$.['ingestion_config']['datafeed']['lookup_translation']['validation']['triplet_check']['file_extensions']",
							"ingestion_config.datafeed.lookup_translation.validation.triplet_check.file_count": "$.['ingestion_config']['datafeed']['lookup_translation']['validation']['triplet_check']['file_count']",
							"ingestion_config.datafeed.lookup_translation.validation.record_count_validation.header": "$.['ingestion_config']['datafeed']['lookup_translation']['validation']['record_count_validation']['header']",
							"ingestion_config.datafeed.lookup_translation.validation.record_count_validation.footer": "$.['ingestion_config']['datafeed']['lookup_translation']['validation']['record_count_validation']['footer']",
							"ingestion_config.datafeed.lookup_translation.validation.record_count_validation.rec_cnt_pos_ctl": "$.['ingestion_config']['datafeed']['lookup_translation']['validation']['record_count_validation']['rec_cnt_pos_ctl']"
						}
					},
					"fileName": "[parameters('AzureBlob3_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('AzureBlob3_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDWTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "_id",
						"type": "varchar"
					},
					{
						"name": "partyId",
						"type": "varchar"
					},
					{
						"name": "updateTime",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "IPAddress",
						"type": "varchar"
					},
					{
						"name": "documentContext",
						"type": "varchar"
					},
					{
						"name": "document",
						"type": "varchar"
					},
					{
						"name": "submissionId",
						"type": "varchar"
					},
					{
						"name": "submissionVersion",
						"type": "varchar"
					},
					{
						"name": "policyId",
						"type": "varchar"
					},
					{
						"name": "referenceDocumenId",
						"type": "varchar"
					},
					{
						"name": "status",
						"type": "varchar"
					},
					{
						"name": "policyRole",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "affirmationDetails"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SQLPass": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "PersonID",
						"type": "Int32"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "Address",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Persons]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1_New1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "walesBank"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Name"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "ModifiedOn",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BankofWales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureTableStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureTable",
				"schema": [],
				"typeProperties": {
					"tableName": "pshtesttable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureTableStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStore2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStore2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Empty1",
						"fileSystem": "test"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "tvs-lms-test"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation"
					},
					"compressionCodec": "none"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "*.pdf",
						"folderPath": "Empty2/all/WS/document",
						"fileSystem": "test"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderName": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('Empty1/',dataset().folderName)",
							"type": "Expression"
						},
						"fileSystem": "test"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderType": {
						"type": "string"
					},
					"barCode": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('Empty2/',dataset().barCode,'/',dataset().folderType,'/','document')",
							"type": "Expression"
						},
						"fileSystem": "test"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbMongoDbApiCollection1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbMongoDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbMongoDbApiCollection",
				"schema": [],
				"typeProperties": {
					"collection": "policy"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDbMongoDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbMongoDbApiCollection2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbMongoDbApi_Ankita2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbMongoDbApiCollection",
				"schema": [],
				"typeProperties": {
					"collection": "ankita1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDbMongoDbApi_Ankita2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbMongoDbApiCollectionAnkita1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbMongoDbApi_Ankita1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"CollectionName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "CosmosDbMongoDbApiCollection",
				"schema": [],
				"typeProperties": {
					"collection": {
						"value": "@dataset().CollectionName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDbMongoDbApi_Ankita1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbMongoDbApiCollectionAnkita3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbMongoDbApi_Ankita1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbMongoDbApiCollection",
				"schema": [],
				"typeProperties": {
					"collection": "ankita1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDbMongoDbApi_Ankita1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbMongoDbApiCollection_Ankita')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbMongoDbApi_Ankita2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"CollectionName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "CosmosDbMongoDbApiCollection",
				"schema": [],
				"typeProperties": {
					"collection": {
						"value": "@dataset().CollectionName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDbMongoDbApi_Ankita2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "mongo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Profile",
						"type": "String"
					},
					{
						"name": "Phoneno",
						"type": "String"
					},
					{
						"name": "OfficeLocation",
						"type": "String"
					},
					{
						"name": "ID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "dataflow"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "empty"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "list.csv",
						"fileSystem": "empty"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ecolab.csv",
						"folderPath": "dataflowtest",
						"container": "empty"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText_ADLS_Gen2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "test"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText_Wales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "walesBank.csv",
						"container": "empty"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_ADLS_Gen1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStore2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"test_param": {
						"type": "string",
						"defaultValue": "@pipeline('Copy_eqt').TriggerTime"
					}
				},
				"annotations": [],
				"type": "AzureDataLakeStoreFile",
				"typeProperties": {
					"format": {
						"type": "ParquetFormat"
					},
					"folderPath": "[parameters('DestinationDataset_ADLS_Gen1_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStore2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_ccg')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "MSFT"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\\"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_eqt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStore2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureDataLakeStoreFile",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "[parameters('DestinationDataset_eqt_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('DestinationDataset_eqt_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStore2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_p0k')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "testempty"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\\"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_qr7')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"structure": [
					{
						"name": "SalesOrganization",
						"type": "String"
					},
					{
						"name": "Purchaseordernumber",
						"type": "String"
					},
					{
						"name": "SalesDocument",
						"type": "String"
					},
					{
						"name": "Delivery",
						"type": "String"
					},
					{
						"name": "BillingDate",
						"type": "String"
					},
					{
						"name": "Material",
						"type": "String"
					},
					{
						"name": "MaterialDescription",
						"type": "String"
					},
					{
						"name": "Cumul.confirmedqty",
						"type": "String"
					},
					{
						"name": "ListpricePerSalesUOM",
						"type": "String"
					},
					{
						"name": "PlandGdsMvmntDate",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions1",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions1Name",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions2",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions2Name",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions3",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions3Name",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions4",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions4Name",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Test_table]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_rii')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "wales.csv",
						"container": "empty"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpFile1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "HttpFile",
				"typeProperties": {
					"format": {
						"type": "JsonFormat"
					},
					"requestMethod": "GET"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "PT1H (2).json",
						"container": "empty"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"time": {
							"type": "string"
						},
						"resourceId": {
							"type": "string"
						},
						"category": {
							"type": "string"
						},
						"level": {
							"type": "integer"
						},
						"operationName": {
							"type": "string"
						},
						"properties": {
							"type": "object",
							"properties": {
								"EventClass": {
									"type": "string"
								},
								"EventSubclass": {
									"type": "string"
								},
								"RootActivityId": {
									"type": "string"
								},
								"IsQueryScaleoutReadonlyInstance": {
									"type": "string"
								},
								"CurrentTime": {
									"type": "string"
								},
								"StartTime": {
									"type": "string"
								},
								"JobID": {
									"type": "null"
								},
								"ObjectID": {
									"type": "string"
								},
								"ObjectType": {
									"type": "string"
								},
								"ObjectName": {
									"type": "string"
								},
								"ObjectPath": {
									"type": "string"
								},
								"ObjectReference": {
									"type": "string"
								},
								"EndTime": {
									"type": "string"
								},
								"Duration": {
									"type": "string"
								},
								"CPUTime": {
									"type": "string"
								},
								"SessionType": {
									"type": "null"
								},
								"ProgressTotal": {
									"type": "null"
								},
								"IntegerData": {
									"type": "string"
								},
								"Severity": {
									"type": "string"
								},
								"Success": {
									"type": "string"
								},
								"Error": {
									"type": "string"
								},
								"TextData": {
									"type": "string"
								},
								"ConnectionID": {
									"type": "string"
								},
								"DatabaseName": {
									"type": "string"
								},
								"NTDomainName": {
									"type": "string"
								},
								"SessionID": {
									"type": "string"
								},
								"SPID": {
									"type": "string"
								},
								"ClientHostName": {
									"type": "string"
								},
								"ClientProcessID": {
									"type": "string"
								},
								"ApplicationName": {
									"type": "string"
								},
								"ApplicationContext": {
									"type": "string"
								},
								"User": {
									"type": "string"
								},
								"EffectiveUsername": {
									"type": "string"
								},
								"Tenant": {
									"type": "string"
								},
								"ServerName": {
									"type": "string"
								},
								"RequestParameters": {
									"type": "string"
								},
								"RequestProperties": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "pth.json",
						"container": "mongo"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "sandeep.json",
						"container": "empty"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"value": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"businessPhones": {
										"type": "array"
									},
									"displayName": {
										"type": "string"
									},
									"givenName": {
										"type": "string"
									},
									"jobTitle": {
										"type": "null"
									},
									"mail": {
										"type": "string"
									},
									"mobilePhone": {
										"type": "null"
									},
									"officeLocation": {
										"type": "null"
									},
									"preferredLanguage": {
										"type": "null"
									},
									"surname": {
										"type": "string"
									},
									"userPrincipalName": {
										"type": "string"
									},
									"id": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json_test')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "custom"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"fruit": {
							"type": "string"
						},
						"size": {
							"type": "string"
						},
						"color": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json_test1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "newjson.json",
						"container": "custom"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"fruit": {
							"type": "string"
						},
						"size": {
							"type": "string"
						},
						"color": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json_web')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "sudipta1.json",
						"container": "empty"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "tvs-lms-test"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@{item().Prop_0}",
							"type": "Expression"
						},
						"container": "dataflow"
					},
					"compressionCodec": "none"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "testadb"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your REST/HTTP",
				"linkedServiceName": {
					"referenceName": "RestService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"URL": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "v1/CountryState?fields=id,description"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your Azure Data Lake Store",
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_ccg')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "empty"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\\"
				},
				"schema": [
					{
						"name": "Field",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_p0k')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "gunjan.txt",
						"fileSystem": "test"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\\"
				},
				"schema": [
					{
						"name": "Field",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_rii')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "gunjan.txt",
						"fileSystem": "test"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\\"
				},
				"schema": [
					{
						"name": "\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"9\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"334214\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"021133\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "tsv.tsv",
						"container": "empty"
					},
					"columnDelimiter": "\t",
					"rowDelimiter": "\r",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Test')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "test1.csv",
						"container": "dataflow"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"nullValue": "\\N",
					"quoteChar": "\"",
					"treatEmptyAsNull": true,
					"skipLineCount": 0
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ZipFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Test_Deva",
						"fileSystem": "test"
					},
					"compression": {
						"type": "ZipDeflate",
						"level": "Fastest"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBatch1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBatch",
				"typeProperties": {
					"accountName": "[parameters('AzureBatch1_properties_typeProperties_accountName')]",
					"accessKey": {
						"type": "SecureString",
						"value": "[parameters('AzureBatch1_accessKey')]"
					},
					"batchUri": "[parameters('AzureBatch1_properties_typeProperties_batchUri')]",
					"poolName": "[parameters('AzureBatch1_properties_typeProperties_poolName')]",
					"linkedServiceName": {
						"referenceName": "AzureBlobStorage",
						"type": "LinkedServiceReference"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime-Azure",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime-Azure')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('AzureBlobStorage3_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "Storage"
				},
				"connectVia": {
					"referenceName": "integrationRuntime-Azure",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime-Azure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeAnalytics')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataLakeAnalytics",
				"typeProperties": {
					"accountName": "[parameters('AzureDataLakeAnalytics_properties_typeProperties_accountName')]",
					"servicePrincipalId": "[parameters('AzureDataLakeAnalytics_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeAnalytics_servicePrincipalKey')]"
					},
					"tenant": "[parameters('AzureDataLakeAnalytics_properties_typeProperties_tenant')]",
					"subscriptionId": "[parameters('AzureDataLakeAnalytics_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('AzureDataLakeAnalytics_properties_typeProperties_resourceGroupName')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorageGen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorageGen2_properties_typeProperties_url')]",
					"tenant": "[parameters('AzureDataLakeStorageGen2_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('AzureDataLakeStorageGen2_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalCredentialType": "ServicePrincipalKey",
					"servicePrincipalCredential": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorageGen2_servicePrincipalCredential')]"
					}
				},
				"connectVia": {
					"referenceName": "SH-IR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SH-IR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStore1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataLakeStore",
				"typeProperties": {
					"dataLakeStoreUri": "[parameters('AzureDataLakeStore1_properties_typeProperties_dataLakeStoreUri')]",
					"tenant": "[parameters('AzureDataLakeStore1_properties_typeProperties_tenant')]",
					"subscriptionId": "[parameters('AzureDataLakeStore1_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('AzureDataLakeStore1_properties_typeProperties_resourceGroupName')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStore2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataLakeStore",
				"typeProperties": {
					"dataLakeStoreUri": "[parameters('AzureDataLakeStore2_properties_typeProperties_dataLakeStoreUri')]",
					"tenant": "[parameters('AzureDataLakeStore2_properties_typeProperties_tenant')]",
					"subscriptionId": "[parameters('AzureDataLakeStore2_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('AzureDataLakeStore2_properties_typeProperties_resourceGroupName')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStoreCosmosStructuredStream1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataLakeStoreCosmosStructuredStream",
				"typeProperties": {
					"accountName": "[parameters('AzureDataLakeStoreCosmosStructuredStream1_properties_typeProperties_accountName')]",
					"tenant": "[parameters('AzureDataLakeStoreCosmosStructuredStream1_properties_typeProperties_tenant')]",
					"subscriptionId": "[parameters('AzureDataLakeStoreCosmosStructuredStream1_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('AzureDataLakeStoreCosmosStructuredStream1_properties_typeProperties_resourceGroupName')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-1505559841787249.9.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks_accessToken')]"
					},
					"existingClusterId": "0122-053821-lie978"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureFunction')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('AzureFunction_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('AzureFunction_functionKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureFunction1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('AzureFunction1_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('AzureFunction1_functionKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMySql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('AzureMySql1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime-Azure",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime-Azure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDW')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDW_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SH-IR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SH-IR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureStorage2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureTableStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureTableStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureTableStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureTableStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureTableStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureTableStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbMongoDb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDbMongoDbApi",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDbMongoDb_connectionString')]",
					"database": "[parameters('CosmosDbMongoDb_properties_typeProperties_database')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime-Azure",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime-Azure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbMongoDbApi_Ankita1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDbMongoDbApi",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDbMongoDbApi_Ankita1_connectionString')]",
					"database": "[parameters('CosmosDbMongoDbApi_Ankita1_properties_typeProperties_database')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbMongoDbApi_Ankita2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDbMongoDbApi",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDbMongoDbApi_Ankita2_connectionString')]",
					"database": "[parameters('CosmosDbMongoDbApi_Ankita2_properties_typeProperties_database')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('FileServer1_properties_typeProperties_host')]",
					"userId": "[parameters('FileServer1_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('FileServer1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FtpServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FtpServer",
				"typeProperties": {
					"host": "[parameters('FtpServer1_properties_typeProperties_host')]",
					"port": 21,
					"enableSsl": true,
					"enableServerCertificateValidation": false,
					"authenticationType": "Basic",
					"userName": "[parameters('FtpServer1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('FtpServer1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "ManagedVNET",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/ManagedVNET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HDI_Spark')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HDInsight",
				"typeProperties": {
					"clusterUri": "https://legendarySpark.azurehdinsight.net",
					"userName": "[parameters('HDI_Spark_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('HDI_Spark_password')]"
					},
					"isEspEnabled": false,
					"fileSystem": "legendaryspark-2020-10-23t11-41-59-297z",
					"linkedServiceName": {
						"referenceName": "AzureDataLakeStorageGen2",
						"type": "LinkedServiceReference"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "SH-IR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SH-IR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Kusto1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Kusto",
				"typeProperties": {
					"endpoint": "[parameters('Kusto1_properties_typeProperties_endpoint')]",
					"servicePrincipalId": "[parameters('Kusto1_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('Kusto1_servicePrincipalKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"connectionString": "[parameters('MySql1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OData1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "OData",
				"typeProperties": {
					"url": "[parameters('OData1_properties_typeProperties_url')]",
					"authenticationType": "Basic",
					"userName": "[parameters('OData1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('OData1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Odbc_MySQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Odbc",
				"typeProperties": {
					"connectionString": {
						"type": "SecureString",
						"value": "[parameters('Odbc_MySQL_connectionString')]"
					},
					"authenticationType": "Basic",
					"userName": "[parameters('Odbc_MySQL_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Odbc_MySQL_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SH-IR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SH-IR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Oracle')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Oracle",
				"typeProperties": {
					"connectionString": "[parameters('Oracle_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Basic",
					"userName": "[parameters('RestService_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('RestService_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"URL": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('RestService1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('RestService1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService2_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('RestService2_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('RestService2_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService3_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestServiceGraph')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"Date": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestServiceGraph_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('RestServiceGraph_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('RestServiceGraph_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Salesforce1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Salesforce",
				"typeProperties": {
					"environmentUrl": "[parameters('Salesforce1_properties_typeProperties_environmentUrl')]",
					"username": "[parameters('Salesforce1_properties_typeProperties_username')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "salesforce"
					},
					"securityToken": {
						"type": "SecureString",
						"value": "[parameters('Salesforce1_securityToken')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Salesforce2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Salesforce",
				"annotations": [],
				"typeProperties": {
					"environmentUrl": "[parameters('Salesforce2_properties_typeProperties_environmentUrl')]",
					"username": {
						"type": "SecureString",
						"value": "[parameters('Salesforce2_properties_typeProperties_username')]"
					},
					"password": {
						"type": "SecureString",
						"value": "[parameters('Salesforce2_password')]"
					},
					"SecurityToken": {
						"type": "SecureString",
						"value": "[parameters('Salesforce2_SecurityToken')]"
					}
				},
				"parameters": {
					"UserName": {
						"type": "String",
						"defaultValue": "xyz@abc.com.abc.dev"
					},
					"PasswdDev": {
						"type": "SecureString"
					},
					"StrToken": {
						"type": "SecureString"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedservice_spark')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HDInsightOnDemand",
				"typeProperties": {
					"clusterType": "spark",
					"clusterSize": 2,
					"timeToLive": "1:30:00",
					"version": "4.0",
					"hostSubscriptionId": "[parameters('linkedservice_spark_properties_typeProperties_hostSubscriptionId')]",
					"clusterResourceGroup": "[parameters('linkedservice_spark_properties_typeProperties_clusterResourceGroup')]",
					"servicePrincipalId": "[parameters('linkedservice_spark_properties_typeProperties_servicePrincipalId')]",
					"osType": "Linux",
					"tenant": "[parameters('linkedservice_spark_properties_typeProperties_tenant')]",
					"clusterNamePrefix": "atlasHDInsightCluster",
					"clusterUserName": "[parameters('linkedservice_spark_properties_typeProperties_clusterUserName')]",
					"clusterPassword": {
						"type": "SecureString",
						"value": "[parameters('linkedservice_spark_clusterPassword')]"
					},
					"clusterSshUserName": "[parameters('linkedservice_spark_properties_typeProperties_clusterSshUserName')]",
					"clusterSshPassword": {
						"type": "SecureString",
						"value": "[parameters('linkedservice_spark_clusterSshPassword')]"
					},
					"sparkVersion": "2.3",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('linkedservice_spark_servicePrincipalKey')]"
					},
					"linkedServiceName": {
						"referenceName": "AzureBlobStorage2",
						"type": "LinkedServiceReference"
					},
					"headNodeSize": "",
					"dataNodeSize": "",
					"zookeeperNodeSize": "",
					"subnetName": "",
					"virtualNetworkId": ""
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Event')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/test/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('Event_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tumbling')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2019-04-26T11:40:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/schedule2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 10,
						"startTime": "2019-05-03T04:48:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/schedule_test')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2019-05-03T04:48:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2019-04-27T06:15:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"referenceTrigger": {
								"referenceName": "Tumbling",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/triggers/Tumbling')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2021-03-11T06:09:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger3')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2021-03-17T06:50:00",
						"timeZone": "Pacific Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_new')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 5,
						"startTime": "2021-01-23T10:41:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ManagedVNET')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SH-IR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SHIRImage')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "Self-hosted Integration runtime created using ARM template",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SSIS-IR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"nodeSize": "Standard_D8_v3",
						"numberOfNodes": 2,
						"maxParallelExecutionsPerNode": 8
					},
					"ssisProperties": {
						"edition": "Standard",
						"licenseType": "BasePrice"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime-Azure')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "South India",
						"dataFlowProperties": {
							"computeType": "MemoryOptimized",
							"coreCount": 32,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime-SH')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime2')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime3')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "MemoryOptimized",
							"coreCount": 8,
							"timeToLive": 10
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime4')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureBlobStorage1_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureBlobStorage1_properties_groupId')]",
				"fqdns": "[parameters('AzureBlobStorage1_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureBlobStorage2_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureBlobStorage2_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureBlobStorage3')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureBlobStorage3_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureBlobStorage3_properties_groupId')]",
				"fqdns": "[parameters('AzureBlobStorage3_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureDataLakeStorage_Gen2')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureDataLakeStorage_Gen2_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureDataLakeStorage_Gen2_properties_groupId')]",
				"fqdns": "[parameters('AzureDataLakeStorage_Gen2_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/LegendaryGen2')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('LegendaryGen2_properties_privateLinkResourceId')]",
				"groupId": "[parameters('LegendaryGen2_properties_groupId')]",
				"fqdns": "[parameters('LegendaryGen2_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		}
	]
}