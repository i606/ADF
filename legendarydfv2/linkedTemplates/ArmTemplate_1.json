{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "legendarydfv2"
		},
		"CosmosDbMongoDb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDbMongoDb'"
		},
		"Salesforce1_securityToken": {
			"type": "secureString",
			"metadata": "Secure string for 'securityToken' of 'Salesforce1'"
		},
		"linkedService_spark_clusterPassword": {
			"type": "secureString",
			"metadata": "Secure string for 'clusterPassword' of 'linkedService_spark'"
		},
		"linkedService_spark_clusterSshPassword": {
			"type": "secureString",
			"metadata": "Secure string for 'clusterSshPassword' of 'linkedService_spark'"
		},
		"linkedService_spark_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'linkedService_spark'"
		},
		"DestinationDataset_e8j_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@dataset().test_param"
		},
		"DestinationDataset_e8j_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "Test"
		},
		"DestinationDataset_eqt_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ""
		},
		"DestinationDataset_eqt_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "Test123"
		},
		"CosmosDbMongoDb_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "affirmationDetails"
		},
		"Salesforce1_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "user"
		},
		"linkedService_spark_properties_typeProperties_hostSubscriptionId": {
			"type": "string",
			"defaultValue": "f935bcc8-a30f-4fbe-9ccf-c7a8c47067ef"
		},
		"linkedService_spark_properties_typeProperties_clusterResourceGroup": {
			"type": "string",
			"defaultValue": "jijo"
		},
		"linkedService_spark_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "legendaryspn"
		},
		"linkedService_spark_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47"
		},
		"Tumbling_properties_pipeline_parameters_Starttime": {
			"type": "string",
			"defaultValue": "1"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "ASA",
						"container": "legendarycontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "ASA",
						"container": "legendarycontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_e8j')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStore1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"test_param": {
						"type": "string",
						"defaultValue": "@pipeline('Copy_eqt').TriggerTime"
					}
				},
				"annotations": [],
				"type": "AzureDataLakeStoreFile",
				"typeProperties": {
					"format": {
						"type": "ParquetFormat"
					},
					"fileName": {
						"value": "[parameters('DestinationDataset_e8j_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": "[parameters('DestinationDataset_e8j_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_eqt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStore1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureDataLakeStoreFile",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "[parameters('DestinationDataset_eqt_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('DestinationDataset_eqt_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_qr7')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"structure": [
					{
						"name": "SalesOrganization",
						"type": "String"
					},
					{
						"name": "Purchaseordernumber",
						"type": "String"
					},
					{
						"name": "SalesDocument",
						"type": "String"
					},
					{
						"name": "Delivery",
						"type": "String"
					},
					{
						"name": "BillingDate",
						"type": "String"
					},
					{
						"name": "Material",
						"type": "String"
					},
					{
						"name": "MaterialDescription",
						"type": "String"
					},
					{
						"name": "Cumul.confirmedqty",
						"type": "String"
					},
					{
						"name": "ListpricePerSalesUOM",
						"type": "String"
					},
					{
						"name": "PlandGdsMvmntDate",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions1",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions1Name",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions2",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions2Name",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions3",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions3Name",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions4",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions4Name",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Test_table]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "empty"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"policyId": {
							"type": "string"
						},
						"submissionId": {
							"type": "string"
						},
						"documents": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"document": {
										"type": "string"
									},
									"documentContext": {
										"type": "string"
									},
									"referenceDocumentId": {
										"type": "string"
									},
									"submissions": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"submissionsVersion": {
													"type": "string"
												},
												"parties": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"status": {
																"type": "string"
															},
															"partyId": {
																"type": "string"
															},
															"policyRole": {
																"type": "string"
															},
															"updateTime": {
																"type": "string"
															},
															"IPAddress": {
																"type": "string"
															}
														}
													}
												}
											}
										}
									},
									"policies": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"policyTerm": {
													"type": "string"
												},
												"parties": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"status": {
																"type": "string"
															},
															"partyId": {
																"type": "string"
															},
															"policyRole": {
																"type": "string"
															},
															"updateTime": {
																"type": "string"
															},
															"IPAddress": {
																"type": "string"
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "data_99750ed6-841b-4f58-8afe-58c4224a6b18_a2531511-c732-4eb6-a9f8-89cea45ad2d9.parquet",
						"container": "empty"
					},
					"compressionCodec": "none"
				},
				"schema": [
					{
						"name": "policyId",
						"type": "UTF8"
					},
					{
						"name": "submissionId",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbMongoDb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDbMongoDbApi",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDbMongoDb_connectionString')]",
					"database": "[parameters('CosmosDbMongoDb_properties_typeProperties_database')]"
				},
				"connectVia": {
					"referenceName": "[parameters('integrationRuntime_integrationRuntime-Azure')]",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Salesforce1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Salesforce",
				"typeProperties": {
					"environmentUrl": "https://login.salesforce.com",
					"username": "[parameters('Salesforce1_properties_typeProperties_username')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "salesforce"
					},
					"securityToken": {
						"type": "SecureString",
						"value": "[parameters('Salesforce1_securityToken')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedService_spark')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HDInsightOnDemand",
				"typeProperties": {
					"clusterType": "spark",
					"clusterSize": 4,
					"timeToLive": "00:05:00",
					"version": "3.6",
					"hostSubscriptionId": "[parameters('linkedService_spark_properties_typeProperties_hostSubscriptionId')]",
					"clusterResourceGroup": "[parameters('linkedService_spark_properties_typeProperties_clusterResourceGroup')]",
					"servicePrincipalId": "[parameters('linkedService_spark_properties_typeProperties_servicePrincipalId')]",
					"tenant": "[parameters('linkedService_spark_properties_typeProperties_tenant')]",
					"clusterNamePrefix": "",
					"clusterPassword": {
						"type": "SecureString",
						"value": "[parameters('linkedService_spark_clusterPassword')]"
					},
					"clusterSshPassword": {
						"type": "SecureString",
						"value": "[parameters('linkedService_spark_clusterSshPassword')]"
					},
					"sparkVersion": "2.2",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('linkedService_spark_servicePrincipalKey')]"
					},
					"linkedServiceName": {
						"referenceName": "AzureStorage2",
						"type": "LinkedServiceReference"
					},
					"headNodeSize": "",
					"dataNodeSize": "",
					"zookeeperNodeSize": ""
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_eqt')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "AzureBlob1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"WindowStart": {
						"type": "string",
						"defaultValue": "@pipeline('CopyPipeline_e8j').TriggerTime"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbMongoDbApiCollection1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbMongoDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbMongoDbApiCollection",
				"schema": [],
				"typeProperties": {
					"collection": "policy"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDbMongoDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Json1",
								"type": "DatasetReference"
							},
							"name": "source1",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlDWTable1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "\n\nsource(output(\n\t\t{_id} as ({$oid} as string),\n\t\tdocuments as (document as string, documentContext as string, policies as (parties as (IPAddress as string, partyId as string, policyRole as string, status as string, updateTime as string)[], policyTerm as string)[], referenceDocumentId as string, submissions as (parties as (IPAddress as string, partyId as string, policyRole as string, status as string, updateTime as string)[], submissionsVersion as string)[])[],\n\t\tpolicyId as string,\n\t\tsubmissionId as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tsingleDocument: true) ~> source1\nsource1 derive(Date = toTimestamp(documents[0].submissions[0].parties[0].updateTime),\n\t\tIPAddress = documents[0].submissions[0].parties[0].IPAddress,\n\t\tpolicyId = policyId,\n\t\tsubmissionId = submissionId) ~> DerivedColumn1\nDerivedColumn1 sink(input(\n\t\t{_id} as string,\n\t\tpartyId as string,\n\t\tupdateTime as string,\n\t\tIPAddress as string,\n\t\tdocumentContext as string,\n\t\tdocument as string,\n\t\tsubmissionId as string,\n\t\tsubmissionVersion as string,\n\t\tpolicyId as string,\n\t\treferenceDocumenId as string,\n\t\tstatus as string,\n\t\tpolicyRole as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: false,\n\tmapColumn(\n\t\tupdateTime = Date\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_e8j')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyPipeline_eqt",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"parameters": {
					"Starttime": {
						"type": "string",
						"defaultValue": "@trigger().outputs.windowStartTime"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopyPipeline_eqt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/schedule1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CopyPipeline_eqt",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 20,
						"startTime": "2019-05-03T04:48:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopyPipeline_eqt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/schedule2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CopyPipeline_eqt",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 10,
						"startTime": "2019-05-03T04:48:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopyPipeline_eqt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tumbling')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "CopyPipeline_e8j",
						"type": "PipelineReference"
					},
					"parameters": {
						"Starttime": "[parameters('Tumbling_properties_pipeline_parameters_Starttime')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2019-04-26T11:40:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopyPipeline_e8j')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "pipeline2",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2019-04-27T06:15:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline2')]"
			]
		}
	]
}