{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "legendarydfv2"
		},
		"AzureBlob1_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ""
		},
		"AzureBlob1_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "empty"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SH-IR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SSIS-IR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"nodeSize": "Standard_D8_v3",
						"numberOfNodes": 2,
						"maxParallelExecutionsPerNode": 8
					},
					"ssisProperties": {
						"edition": "Standard",
						"licenseType": "BasePrice"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime-Azure')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLiveInMinutes": 60
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime2')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_clear_staging_table]",
							"storedProcedureParameters": {
								"COUNTRY": {
									"value": {
										"value": "@variables('table_properties')[0].Country",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDW",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "table_properties",
							"value": [
								{
									"SrcTableName": "CHAT",
									"TrgTableName": "CHAT",
									"InitBot": "DATEINITBOT",
									"EndBot": "DATEENDBOT",
									"RequestTransfer": "DATEREQUESTTRANSFER",
									"InitLiveChat": "DATEINITCHAT",
									"EndLiveChat": "DATEENDCHAT",
									"Country": "EC",
									"TableType": "dbo.DataTypeForChatTable",
									"TableTypeParameterName": "chat_table",
									"Mapping": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"name": "GUIDCHAT",
													"type": "Guid"
												},
												"sink": {
													"name": "GUIDCHAT"
												}
											},
											{
												"source": {
													"name": "GUIDUSERDATA",
													"type": "String"
												},
												"sink": {
													"name": "GUIDUSERDATA"
												}
											},
											{
												"source": {
													"name": "CUSTOMERIDENTIFIER",
													"type": "String"
												},
												"sink": {
													"name": "CUSTOMERIDENTIFIER"
												}
											},
											{
												"source": {
													"name": "CUSTOMERNAME",
													"type": "String"
												},
												"sink": {
													"name": "CUSTOMERNAME"
												}
											},
											{
												"source": {
													"name": "ANUMBER",
													"type": "String"
												},
												"sink": {
													"name": "ANUMBER"
												}
											},
											{
												"source": {
													"name": "GUIDCLIENTTYPE",
													"type": "Guid"
												},
												"sink": {
													"name": "GUIDCLIENTTYPE"
												}
											},
											{
												"source": {
													"name": "GUIDSUPPORTTHEME",
													"type": "Guid"
												},
												"sink": {
													"name": "GUIDSUPPORTTHEME"
												}
											},
											{
												"source": {
													"name": "GUIDSYSTEMCAMPAIGN",
													"type": "Guid"
												},
												"sink": {
													"name": "GUIDSYSTEMCAMPAIGN"
												}
											},
											{
												"source": {
													"name": "GUIDSYSTEMREGION",
													"type": "Guid"
												},
												"sink": {
													"name": "GUIDSYSTEMREGION"
												}
											},
											{
												"source": {
													"name": "DATEINITCHAT",
													"type": "DateTimeOffset"
												},
												"sink": {
													"name": "DATEINITCHAT"
												}
											},
											{
												"source": {
													"name": "DATEENDCHAT",
													"type": "DateTimeOffset"
												},
												"sink": {
													"name": "DATEENDCHAT"
												}
											},
											{
												"source": {
													"name": "GUIDCHATSTATE",
													"type": "Guid"
												},
												"sink": {
													"name": "GUIDCHATSTATE"
												}
											},
											{
												"source": {
													"name": "LIMITTOANSWER",
													"type": "Int64"
												},
												"sink": {
													"name": "LIMITTOANSWER"
												}
											},
											{
												"source": {
													"name": "GUIDCHATFINISHBY",
													"type": "Guid"
												},
												"sink": {
													"name": "GUIDCHATFINISHBY"
												}
											},
											{
												"source": {
													"name": "ANSWEREDSURVEY",
													"type": "Byte"
												},
												"sink": {
													"name": "ANSWEREDSURVEY"
												}
											},
											{
												"source": {
													"name": "CUSTOMERREMOTEIP",
													"type": "String"
												},
												"sink": {
													"name": "CUSTOMERREMOTEIP"
												}
											},
											{
												"source": {
													"name": "PRIORITYSUPPORTTHEME",
													"type": "Int32"
												},
												"sink": {
													"name": "PRIORITYSUPPORTTHEME"
												}
											},
											{
												"source": {
													"name": "GUIDSYSTEMCHANNEL",
													"type": "Guid"
												},
												"sink": {
													"name": "GUIDSYSTEMCHANNEL"
												}
											},
											{
												"source": {
													"name": "GUIDSYSTEMCALLCENTER",
													"type": "Guid"
												},
												"sink": {
													"name": "GUIDSYSTEMCALLCENTER"
												}
											},
											{
												"source": {
													"name": "DATEFIRSTANSWER",
													"type": "DateTimeOffset"
												},
												"sink": {
													"name": "DATEFIRSTANSWER"
												}
											},
											{
												"source": {
													"name": "ANSWERBEFORELIMIT",
													"type": "Byte"
												},
												"sink": {
													"name": "ANSWERBEFORELIMIT"
												}
											},
											{
												"source": {
													"name": "ISBOTATTENDED",
													"type": "Byte"
												},
												"sink": {
													"name": "ISBOTATTENDED"
												}
											},
											{
												"source": {
													"name": "ISTRANSFERAGENT",
													"type": "Byte"
												},
												"sink": {
													"name": "ISTRANSFERAGENT"
												}
											},
											{
												"source": {
													"name": "DATEINITBOT",
													"type": "DateTimeOffset"
												},
												"sink": {
													"name": "DATEINITBOT"
												}
											},
											{
												"source": {
													"name": "DATEENDBOT",
													"type": "DateTimeOffset"
												},
												"sink": {
													"name": "DATEENDBOT"
												}
											},
											{
												"source": {
													"name": "CUSTOMERCEDULA",
													"type": "String"
												},
												"sink": {
													"name": "CUSTOMERCEDULA"
												}
											},
											{
												"source": {
													"name": "CUSTOMEREMAIL",
													"type": "String"
												},
												"sink": {
													"name": "CUSTOMEREMAIL"
												}
											},
											{
												"source": {
													"name": "DATEOPENCHAT",
													"type": "DateTimeOffset"
												},
												"sink": {
													"name": "DATEOPENCHAT"
												}
											},
											{
												"source": {
													"name": "GUIDSYSTEMCOMPANY",
													"type": "Guid"
												},
												"sink": {
													"name": "GUIDSYSTEMCOMPANY"
												}
											},
											{
												"source": {
													"name": "ISDIRECTAGENT",
													"type": "Byte"
												},
												"sink": {
													"name": "ISDIRECTAGENT"
												}
											},
											{
												"source": {
													"name": "DATEREQUESTTRANSFER",
													"type": "DateTimeOffset"
												},
												"sink": {
													"name": "DATEREQUESTTRANSFER"
												}
											},
											{
												"source": {
													"name": "COUNTRYCODE",
													"type": "String"
												},
												"sink": {
													"name": "COUNTRYCODE"
												}
											}
										]
									},
									"StoredProcedureNameForInsertOperation": "stg.usp_insert_chat_table",
									"StoredProcedureNameForMergeOperation": "dw.usp_upsert_chat_all"
								}
							]
						}
					}
				],
				"variables": {
					"table_properties": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlob1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "ParquetFormat"
					},
					"fileName": "[parameters('AzureBlob1_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('AzureBlob1_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDWTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "_id",
						"type": "varchar"
					},
					{
						"name": "partyId",
						"type": "varchar"
					},
					{
						"name": "updateTime",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "IPAddress",
						"type": "varchar"
					},
					{
						"name": "documentContext",
						"type": "varchar"
					},
					{
						"name": "document",
						"type": "varchar"
					},
					{
						"name": "submissionId",
						"type": "varchar"
					},
					{
						"name": "submissionVersion",
						"type": "varchar"
					},
					{
						"name": "policyId",
						"type": "varchar"
					},
					{
						"name": "referenceDocumenId",
						"type": "varchar"
					},
					{
						"name": "status",
						"type": "varchar"
					},
					{
						"name": "policyRole",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "affirmationDetails"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "data_ad9df8d7-503f-4008-bc9e-eca468af013e_704c4e36-a1de-4d29-9a2e-f9ab289935e2.json",
						"container": "empty"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStore",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": "1.csv",
						"folderPath": "Test123"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStore1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "tvs-lms-test"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation"
					},
					"compressionCodec": "none"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbMongoDbApiCollection2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbMongoDbApi_Ankita2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbMongoDbApiCollection",
				"schema": [],
				"typeProperties": {
					"collection": "ankita1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbMongoDbApiCollectionAnkita1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbMongoDbApi_Ankita1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"CollectionName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "CosmosDbMongoDbApiCollection",
				"schema": [],
				"typeProperties": {
					"collection": {
						"value": "@dataset().CollectionName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbMongoDbApiCollectionAnkita3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbMongoDbApi_Ankita1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbMongoDbApiCollection",
				"schema": [],
				"typeProperties": {
					"collection": "ankita1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbMongoDbApiCollection_Ankita')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbMongoDbApi_Ankita2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"CollectionName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "CosmosDbMongoDbApiCollection",
				"schema": [],
				"typeProperties": {
					"collection": {
						"value": "@dataset().CollectionName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "1.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "dataflow"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "empty"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "list.csv",
						"container": "empty"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "collection.csv",
						"container": "empty"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CollectionName",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		}
	]
}