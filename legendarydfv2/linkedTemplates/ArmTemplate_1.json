{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "legendarydfv2"
		},
		"linkedService_spark_clusterPassword": {
			"type": "secureString",
			"metadata": "Secure string for 'clusterPassword' of 'linkedService_spark'"
		},
		"linkedService_spark_clusterSshPassword": {
			"type": "secureString",
			"metadata": "Secure string for 'clusterSshPassword' of 'linkedService_spark'"
		},
		"linkedService_spark_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'linkedService_spark'"
		},
		"SourceDataset_eqt_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "1.csv"
		},
		"SourceDataset_eqt_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": ""
		},
		"SourceDataset_qr7_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": ""
		},
		"AzureBlobStorage1_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "storage"
		},
		"linkedService_spark_properties_typeProperties_hostSubscriptionId": {
			"type": "string",
			"defaultValue": "f935bcc8-a30f-4fbe-9ccf-c7a8c47067ef"
		},
		"linkedService_spark_properties_typeProperties_clusterResourceGroup": {
			"type": "string",
			"defaultValue": "jijo"
		},
		"linkedService_spark_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "legendaryspn"
		},
		"linkedService_spark_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47"
		},
		"trigger1_properties_pipeline_parameters_SliceStart": {
			"type": "string",
			"defaultValue": "1"
		},
		"Tumbling_properties_pipeline_parameters_Starttime": {
			"type": "string",
			"defaultValue": "1"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_ej5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"typeProperties": {
					"tableName": "[[dbo].[Test_table]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_eqt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "FileShare",
				"structure": [
					{
						"name": "SalesOrganization",
						"type": "String"
					},
					{
						"name": "Purchaseordernumber",
						"type": "String"
					},
					{
						"name": "SalesDocument",
						"type": "Int64"
					},
					{
						"name": "Delivery",
						"type": "String"
					},
					{
						"name": "BillingDate",
						"type": "String"
					},
					{
						"name": "Material",
						"type": "Int64"
					},
					{
						"name": "MaterialDescription",
						"type": "String"
					},
					{
						"name": "Cumul.confirmedqty",
						"type": "Int64"
					},
					{
						"name": "ListpricePerSalesUOM",
						"type": "Decimal"
					},
					{
						"name": "PlandGdsMvmntDate",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions1",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions1Name",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions2",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions2Name",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions3",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions3Name",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions4",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions4Name",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "[parameters('SourceDataset_eqt_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('SourceDataset_eqt_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_qr7')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "FileShare",
				"structure": [
					{
						"name": "SalesOrganization",
						"type": "String"
					},
					{
						"name": "Purchaseordernumber",
						"type": "String"
					},
					{
						"name": "SalesDocument",
						"type": "Int64"
					},
					{
						"name": "Delivery",
						"type": "String"
					},
					{
						"name": "BillingDate",
						"type": "String"
					},
					{
						"name": "Material",
						"type": "Int64"
					},
					{
						"name": "MaterialDescription",
						"type": "String"
					},
					{
						"name": "Cumul.confirmedqty",
						"type": "Int64"
					},
					{
						"name": "ListpricePerSalesUOM",
						"type": "Decimal"
					},
					{
						"name": "PlandGdsMvmntDate",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions1",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions1Name",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions2",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions2Name",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions3",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions3Name",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions4",
						"type": "String"
					},
					{
						"name": "Loc.Sal.Regions4Name",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"folderPath": "[parameters('SourceDataset_qr7_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('AzureBlobStorage1_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedService_spark')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HDInsightOnDemand",
				"typeProperties": {
					"clusterType": "spark",
					"clusterSize": 4,
					"timeToLive": "00:05:00",
					"version": "3.6",
					"hostSubscriptionId": "[parameters('linkedService_spark_properties_typeProperties_hostSubscriptionId')]",
					"clusterResourceGroup": "[parameters('linkedService_spark_properties_typeProperties_clusterResourceGroup')]",
					"servicePrincipalId": "[parameters('linkedService_spark_properties_typeProperties_servicePrincipalId')]",
					"tenant": "[parameters('linkedService_spark_properties_typeProperties_tenant')]",
					"clusterNamePrefix": "",
					"clusterPassword": {
						"type": "SecureString",
						"value": "[parameters('linkedService_spark_clusterPassword')]"
					},
					"clusterSshPassword": {
						"type": "SecureString",
						"value": "[parameters('linkedService_spark_clusterSshPassword')]"
					},
					"sparkVersion": "2.2",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('linkedService_spark_servicePrincipalKey')]"
					},
					"linkedServiceName": {
						"referenceName": "AzureStorage2",
						"type": "LinkedServiceReference"
					},
					"headNodeSize": "",
					"dataNodeSize": "",
					"zookeeperNodeSize": ""
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_eqt')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_eqt",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "AzureBlob1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureBlob1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"WindowStart": {
						"type": "string",
						"defaultValue": "@pipeline('CopyPipeline_e8j').TriggerTime"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "select * from persons;"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup2').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup3",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderQuery": "select * from persons"
										},
										"dataset": {
											"referenceName": "AzureSqlTable1",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "Web1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "http://www.google.com",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@activity('Lookup3').output.value[0].PersonID",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"SliceStart": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AzureBlob1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"recursive": true
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_e8j')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyPipeline_eqt",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"parameters": {
					"Starttime": {
						"type": "string",
						"defaultValue": "@trigger().outputs.windowStartTime"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopyPipeline_eqt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/schedule1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CopyPipeline_eqt",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 20,
						"startTime": "2019-05-03T04:48:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopyPipeline_eqt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/schedule2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CopyPipeline_eqt",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 10,
						"startTime": "2019-05-03T04:48:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopyPipeline_eqt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "pipeline2",
						"type": "PipelineReference"
					},
					"parameters": {
						"SliceStart": "[parameters('trigger1_properties_pipeline_parameters_SliceStart')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2019-04-27T06:15:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tumbling')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "CopyPipeline_e8j",
						"type": "PipelineReference"
					},
					"parameters": {
						"Starttime": "[parameters('Tumbling_properties_pipeline_parameters_Starttime')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2019-04-26T11:40:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopyPipeline_e8j')]"
			]
		}
	]
}