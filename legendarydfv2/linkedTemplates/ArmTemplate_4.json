{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "legendarydfv2"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"CosmosDbMongoDb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDbMongoDb'"
		},
		"Odbc_MySQL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Odbc_MySQL'"
		},
		"Odbc_MySQL_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Odbc_MySQL'"
		},
		"Salesforce1_securityToken": {
			"type": "secureString",
			"metadata": "Secure string for 'securityToken' of 'Salesforce1'"
		},
		"linkedservice_spark_clusterPassword": {
			"type": "secureString",
			"metadata": "Secure string for 'clusterPassword' of 'linkedservice_spark'"
		},
		"linkedservice_spark_clusterSshPassword": {
			"type": "secureString",
			"metadata": "Secure string for 'clusterSshPassword' of 'linkedservice_spark'"
		},
		"linkedservice_spark_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'linkedservice_spark'"
		},
		"CosmosDbMongoDb_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "affirmationDetails"
		},
		"HttpServer1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://efs010.effacts.com/effacts/rest/v1/CountryState?fields=id,description"
		},
		"Odbc_MySQL_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "root"
		},
		"Salesforce1_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "https://login.salesforce.com"
		},
		"Salesforce1_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "user"
		},
		"linkedservice_spark_properties_typeProperties_hostSubscriptionId": {
			"type": "string",
			"defaultValue": "f935bcc8-a30f-4fbe-9ccf-c7a8c47067ef"
		},
		"linkedservice_spark_properties_typeProperties_clusterResourceGroup": {
			"type": "string",
			"defaultValue": "jijo"
		},
		"linkedservice_spark_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "legendaryspn"
		},
		"linkedservice_spark_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47"
		},
		"linkedservice_spark_properties_typeProperties_clusterUserName": {
			"type": "string",
			"defaultValue": "atlas"
		},
		"linkedservice_spark_properties_typeProperties_clusterSshUserName": {
			"type": "string",
			"defaultValue": "atlas"
		},
		"AzureBlobStorage1_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/f935bcc8-a30f-4fbe-9ccf-c7a8c47067ef/resourceGroups/jijo/providers/Microsoft.Storage/storageAccounts/legendarygeneration2"
		},
		"AzureBlobStorage1_properties_groupId": {
			"type": "string",
			"defaultValue": "blob"
		},
		"AzureBlobStorage1_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"legendarygeneration2.blob.core.windows.net"
			]
		},
		"AzureBlobStorage2_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/f935bcc8-a30f-4fbe-9ccf-c7a8c47067ef/resourceGroups/Vivek/providers/Microsoft.Storage/storageAccounts/blobstorage100"
		},
		"AzureBlobStorage2_properties_groupId": {
			"type": "string",
			"defaultValue": "blob"
		},
		"AzureBlobStorage3_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/f935bcc8-a30f-4fbe-9ccf-c7a8c47067ef/resourceGroups/jijo/providers/Microsoft.Storage/storageAccounts/legendaryadlsgen2"
		},
		"AzureBlobStorage3_properties_groupId": {
			"type": "string",
			"defaultValue": "blob"
		},
		"AzureBlobStorage3_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"legendaryadlsgen2.blob.core.windows.net"
			]
		},
		"AzureDataLakeStorage_Gen2_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/f935bcc8-a30f-4fbe-9ccf-c7a8c47067ef/resourceGroups/jijo/providers/Microsoft.Storage/storageAccounts/legendarygeneration2"
		},
		"AzureDataLakeStorage_Gen2_properties_groupId": {
			"type": "string",
			"defaultValue": "dfs"
		},
		"AzureDataLakeStorage_Gen2_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"legendarygeneration2.dfs.core.windows.net"
			]
		},
		"LegendaryGen2_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/f935bcc8-a30f-4fbe-9ccf-c7a8c47067ef/resourceGroups/jijo/providers/Microsoft.Storage/storageAccounts/legendarygen2"
		},
		"LegendaryGen2_properties_groupId": {
			"type": "string",
			"defaultValue": "blob"
		},
		"LegendaryGen2_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"legendarygen2.blob.core.windows.net"
			]
		},
		"AzureBlob1_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "test.json"
		},
		"AzureBlob1_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "empty"
		},
		"AzureBlob2_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "odin_fullrefresh_daily.json"
		},
		"AzureBlob2_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "legendarycontainer"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SH-IR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbMongoDb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDbMongoDbApi",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDbMongoDb_connectionString')]",
					"database": "[parameters('CosmosDbMongoDb_properties_typeProperties_database')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime-Azure",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "SH-IR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Odbc_MySQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Odbc",
				"typeProperties": {
					"connectionString": {
						"type": "SecureString",
						"value": "[parameters('Odbc_MySQL_connectionString')]"
					},
					"authenticationType": "Basic",
					"userName": "[parameters('Odbc_MySQL_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Odbc_MySQL_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SH-IR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Salesforce1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Salesforce",
				"typeProperties": {
					"environmentUrl": "[parameters('Salesforce1_properties_typeProperties_environmentUrl')]",
					"username": "[parameters('Salesforce1_properties_typeProperties_username')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "salesforce"
					},
					"securityToken": {
						"type": "SecureString",
						"value": "[parameters('Salesforce1_securityToken')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedservice_spark')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HDInsightOnDemand",
				"typeProperties": {
					"clusterType": "spark",
					"clusterSize": 2,
					"timeToLive": "1:30:00",
					"version": "4.0",
					"hostSubscriptionId": "[parameters('linkedservice_spark_properties_typeProperties_hostSubscriptionId')]",
					"clusterResourceGroup": "[parameters('linkedservice_spark_properties_typeProperties_clusterResourceGroup')]",
					"servicePrincipalId": "[parameters('linkedservice_spark_properties_typeProperties_servicePrincipalId')]",
					"osType": "Linux",
					"tenant": "[parameters('linkedservice_spark_properties_typeProperties_tenant')]",
					"clusterNamePrefix": "atlasHDInsightCluster",
					"clusterUserName": "[parameters('linkedservice_spark_properties_typeProperties_clusterUserName')]",
					"clusterPassword": {
						"type": "SecureString",
						"value": "[parameters('linkedservice_spark_clusterPassword')]"
					},
					"clusterSshUserName": "[parameters('linkedservice_spark_properties_typeProperties_clusterSshUserName')]",
					"clusterSshPassword": {
						"type": "SecureString",
						"value": "[parameters('linkedservice_spark_clusterSshPassword')]"
					},
					"sparkVersion": "2.3",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('linkedservice_spark_servicePrincipalKey')]"
					},
					"linkedServiceName": {
						"referenceName": "AzureBlobStorage2",
						"type": "LinkedServiceReference"
					},
					"headNodeSize": "",
					"dataNodeSize": "",
					"zookeeperNodeSize": "",
					"subnetName": "",
					"virtualNetworkId": ""
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2019-04-27T06:15:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"referenceTrigger": {
								"referenceName": "Tumbling",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ManagedVNET')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureBlobStorage1_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureBlobStorage1_properties_groupId')]",
				"fqdns": "[parameters('AzureBlobStorage1_properties_fqdns')]"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureBlobStorage2_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureBlobStorage2_properties_groupId')]"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureBlobStorage3')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureBlobStorage3_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureBlobStorage3_properties_groupId')]",
				"fqdns": "[parameters('AzureBlobStorage3_properties_fqdns')]"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureDataLakeStorage_Gen2')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureDataLakeStorage_Gen2_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureDataLakeStorage_Gen2_properties_groupId')]",
				"fqdns": "[parameters('AzureDataLakeStorage_Gen2_properties_fqdns')]"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/LegendaryGen2')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('LegendaryGen2_properties_privateLinkResourceId')]",
				"groupId": "[parameters('LegendaryGen2_properties_groupId')]",
				"fqdns": "[parameters('LegendaryGen2_properties_fqdns')]"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Avro')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Avro",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "21 (1).avro",
						"container": "empty"
					}
				},
				"schema": {
					"type": "record",
					"name": "Microsoft.ServiceBus.Messaging.EventData",
					"fields": [
						{
							"name": "SequenceNumber",
							"type": "long"
						},
						{
							"name": "Offset",
							"type": "string"
						},
						{
							"name": "EnqueuedTimeUtc",
							"type": "string"
						},
						{
							"name": "SystemProperties",
							"type": {
								"type": "map",
								"values": [
									"long",
									"double",
									"string",
									"bytes"
								]
							}
						},
						{
							"name": "Properties",
							"type": {
								"type": "map",
								"values": [
									"long",
									"double",
									"string",
									"bytes",
									"null"
								]
							}
						},
						{
							"name": "Body",
							"type": [
								"null",
								"bytes"
							]
						}
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlob1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "ParquetFormat"
					},
					"fileName": "[parameters('AzureBlob1_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('AzureBlob1_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlob2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "ingestion_config.source",
						"type": "String"
					},
					{
						"name": "ingestion_config.app",
						"type": "String"
					},
					{
						"name": "ingestion_config.home_dir",
						"type": "String"
					},
					{
						"name": "ingestion_config.feed_id",
						"type": "String"
					},
					{
						"name": "ingestion_config.seq_type",
						"type": "String"
					},
					{
						"name": "ingestion_config.file_sensor.expected_ext",
						"type": "String"
					},
					{
						"name": "ingestion_config.file_sensor.expected_ext_count",
						"type": "Int64"
					},
					{
						"name": "ingestion_config.location.base_dir",
						"type": "String"
					},
					{
						"name": "ingestion_config.location.input_dir",
						"type": "String"
					},
					{
						"name": "ingestion_config.location.error_dir",
						"type": "String"
					},
					{
						"name": "ingestion_config.location.archive_dir",
						"type": "String"
					},
					{
						"name": "ingestion_config.location.unzipped_dir",
						"type": "String"
					},
					{
						"name": "ingestion_config.start_sequence.initial_seq_id",
						"type": "String"
					},
					{
						"name": "ingestion_config.start_sequence.length",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.config_path",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.cdc",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.format",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.delimiter",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.config_path",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.cdc",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.format",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.delimiter",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.config_path",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.cdc",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.format",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.delimiter",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.validation.file_date_format",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.cdc_config.history_table",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.cdc_config.active_table",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.cdc_config.key_cols",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.cdc_config.update_ts_col",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.cdc_config.custom_cdc_query",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.validation.file_date_format",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.cdc_config.history_table",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.cdc_config.active_table",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.cdc_config.key_cols",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.cdc_config.update_ts_col",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.cdc_config.custom_cdc_query",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.validation.file_date_format",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.cdc_config.history_table",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.cdc_config.active_table",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.cdc_config.key_cols",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.cdc_config.update_ts_col",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.cdc_config.custom_cdc_query",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.validation.triplet_check.file_pattern",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.validation.triplet_check.file_extensions",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.validation.triplet_check.file_count",
						"type": "Int64"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.validation.record_count_validation.header",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.validation.record_count_validation.footer",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_category.validation.record_count_validation.rec_cnt_pos_ctl",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.validation.triplet_check.file_pattern",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.validation.triplet_check.file_extensions",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.validation.triplet_check.file_count",
						"type": "Int64"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.validation.record_count_validation.header",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.validation.record_count_validation.footer",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_reference.validation.record_count_validation.rec_cnt_pos_ctl",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.validation.triplet_check.file_pattern",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.validation.triplet_check.file_extensions",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.validation.triplet_check.file_count",
						"type": "Int64"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.validation.record_count_validation.header",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.validation.record_count_validation.footer",
						"type": "String"
					},
					{
						"name": "ingestion_config.datafeed.lookup_translation.validation.record_count_validation.rec_cnt_pos_ctl",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "JsonFormat"
					},
					"fileName": "[parameters('AzureBlob2_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('AzureBlob2_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SQLPass": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "PersonID",
						"type": "Int32"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "Address",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Persons]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1_New1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "walesBank"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Empty1",
						"fileSystem": "test"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "*.pdf",
						"folderPath": "Empty2/all/WS/document",
						"fileSystem": "test"
					}
				}
			},
			"dependsOn": []
		}
	]
}