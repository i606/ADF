{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "legendarydfv2"
		},
		"CosmosDbMongoDb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDbMongoDb'"
		},
		"Odbc_MySQL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Odbc_MySQL'"
		},
		"Odbc_MySQL_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Odbc_MySQL'"
		},
		"Salesforce1_securityToken": {
			"type": "secureString",
			"metadata": "Secure string for 'securityToken' of 'Salesforce1'"
		},
		"linkedservice_spark_clusterPassword": {
			"type": "secureString",
			"metadata": "Secure string for 'clusterPassword' of 'linkedservice_spark'"
		},
		"linkedservice_spark_clusterSshPassword": {
			"type": "secureString",
			"metadata": "Secure string for 'clusterSshPassword' of 'linkedservice_spark'"
		},
		"linkedservice_spark_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'linkedservice_spark'"
		},
		"CosmosDbMongoDb_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "affirmationDetails"
		},
		"HttpServer1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://efs010.effacts.com/effacts/rest/v1/CountryState?fields=id,description"
		},
		"Odbc_MySQL_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "root"
		},
		"Salesforce1_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "https://login.salesforce.com"
		},
		"Salesforce1_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "user"
		},
		"linkedservice_spark_properties_typeProperties_hostSubscriptionId": {
			"type": "string",
			"defaultValue": "f935bcc8-a30f-4fbe-9ccf-c7a8c47067ef"
		},
		"linkedservice_spark_properties_typeProperties_clusterResourceGroup": {
			"type": "string",
			"defaultValue": "jijo"
		},
		"linkedservice_spark_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "legendaryspn"
		},
		"linkedservice_spark_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47"
		},
		"linkedservice_spark_properties_typeProperties_clusterUserName": {
			"type": "string",
			"defaultValue": "atlas"
		},
		"linkedservice_spark_properties_typeProperties_clusterSshUserName": {
			"type": "string",
			"defaultValue": "atlas"
		},
		"AzureBlobStorage1_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/f935bcc8-a30f-4fbe-9ccf-c7a8c47067ef/resourceGroups/jijo/providers/Microsoft.Storage/storageAccounts/legendarygeneration2"
		},
		"AzureBlobStorage1_properties_groupId": {
			"type": "string",
			"defaultValue": "blob"
		},
		"AzureBlobStorage1_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"legendarygeneration2.blob.core.windows.net"
			]
		},
		"AzureBlobStorage2_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/f935bcc8-a30f-4fbe-9ccf-c7a8c47067ef/resourceGroups/Vivek/providers/Microsoft.Storage/storageAccounts/blobstorage100"
		},
		"AzureBlobStorage2_properties_groupId": {
			"type": "string",
			"defaultValue": "blob"
		},
		"AzureBlobStorage3_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/f935bcc8-a30f-4fbe-9ccf-c7a8c47067ef/resourceGroups/jijo/providers/Microsoft.Storage/storageAccounts/legendaryadlsgen2"
		},
		"AzureBlobStorage3_properties_groupId": {
			"type": "string",
			"defaultValue": "blob"
		},
		"AzureBlobStorage3_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"legendaryadlsgen2.blob.core.windows.net"
			]
		},
		"AzureDataLakeStorage_Gen2_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/f935bcc8-a30f-4fbe-9ccf-c7a8c47067ef/resourceGroups/jijo/providers/Microsoft.Storage/storageAccounts/legendarygeneration2"
		},
		"AzureDataLakeStorage_Gen2_properties_groupId": {
			"type": "string",
			"defaultValue": "dfs"
		},
		"AzureDataLakeStorage_Gen2_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"legendarygeneration2.dfs.core.windows.net"
			]
		},
		"LegendaryGen2_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/f935bcc8-a30f-4fbe-9ccf-c7a8c47067ef/resourceGroups/jijo/providers/Microsoft.Storage/storageAccounts/legendarygen2"
		},
		"LegendaryGen2_properties_groupId": {
			"type": "string",
			"defaultValue": "blob"
		},
		"LegendaryGen2_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"legendarygen2.blob.core.windows.net"
			]
		},
		"AzureBlob1_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "test.json"
		},
		"AzureBlob1_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "empty"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbMongoDb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDbMongoDbApi",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDbMongoDb_connectionString')]",
					"database": "[parameters('CosmosDbMongoDb_properties_typeProperties_database')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime-Azure",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "SH-IR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Odbc_MySQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Odbc",
				"typeProperties": {
					"connectionString": {
						"type": "SecureString",
						"value": "[parameters('Odbc_MySQL_connectionString')]"
					},
					"authenticationType": "Basic",
					"userName": "[parameters('Odbc_MySQL_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Odbc_MySQL_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SH-IR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Salesforce1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Salesforce",
				"typeProperties": {
					"environmentUrl": "[parameters('Salesforce1_properties_typeProperties_environmentUrl')]",
					"username": "[parameters('Salesforce1_properties_typeProperties_username')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "salesforce"
					},
					"securityToken": {
						"type": "SecureString",
						"value": "[parameters('Salesforce1_securityToken')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedservice_spark')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HDInsightOnDemand",
				"typeProperties": {
					"clusterType": "spark",
					"clusterSize": 2,
					"timeToLive": "1:30:00",
					"version": "4.0",
					"hostSubscriptionId": "[parameters('linkedservice_spark_properties_typeProperties_hostSubscriptionId')]",
					"clusterResourceGroup": "[parameters('linkedservice_spark_properties_typeProperties_clusterResourceGroup')]",
					"servicePrincipalId": "[parameters('linkedservice_spark_properties_typeProperties_servicePrincipalId')]",
					"osType": "Linux",
					"tenant": "[parameters('linkedservice_spark_properties_typeProperties_tenant')]",
					"clusterNamePrefix": "atlasHDInsightCluster",
					"clusterUserName": "[parameters('linkedservice_spark_properties_typeProperties_clusterUserName')]",
					"clusterPassword": {
						"type": "SecureString",
						"value": "[parameters('linkedservice_spark_clusterPassword')]"
					},
					"clusterSshUserName": "[parameters('linkedservice_spark_properties_typeProperties_clusterSshUserName')]",
					"clusterSshPassword": {
						"type": "SecureString",
						"value": "[parameters('linkedservice_spark_clusterSshPassword')]"
					},
					"sparkVersion": "2.3",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('linkedservice_spark_servicePrincipalKey')]"
					},
					"linkedServiceName": {
						"referenceName": "AzureBlobStorage2",
						"type": "LinkedServiceReference"
					},
					"headNodeSize": "",
					"dataNodeSize": "",
					"zookeeperNodeSize": "",
					"subnetName": "",
					"virtualNetworkId": ""
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2019-04-27T06:15:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"referenceTrigger": {
								"referenceName": "Tumbling",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ManagedVNET')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureBlobStorage1_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureBlobStorage1_properties_groupId')]",
				"fqdns": "[parameters('AzureBlobStorage1_properties_fqdns')]"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureBlobStorage2_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureBlobStorage2_properties_groupId')]"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureBlobStorage3')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureBlobStorage3_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureBlobStorage3_properties_groupId')]",
				"fqdns": "[parameters('AzureBlobStorage3_properties_fqdns')]"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureDataLakeStorage_Gen2')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureDataLakeStorage_Gen2_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureDataLakeStorage_Gen2_properties_groupId')]",
				"fqdns": "[parameters('AzureDataLakeStorage_Gen2_properties_fqdns')]"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/LegendaryGen2')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('LegendaryGen2_properties_privateLinkResourceId')]",
				"groupId": "[parameters('LegendaryGen2_properties_groupId')]",
				"fqdns": "[parameters('LegendaryGen2_properties_fqdns')]"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Web')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://efs010.effacts.com/effacts/rest/v2/auth/basic?integratorKey=c2502ac2-d89b-4f8e-af8f-74767cf4d96a&context=684",
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "Basic",
								"username": "SER_EDL_DEV",
								"password": {
									"type": "AzureKeyVaultSecret",
									"store": {
										"referenceName": "AzureKeyVault1",
										"type": "LinkedServiceReference"
									},
									"secretName": "RESTnew"
								}
							}
						}
					},
					{
						"name": "Web2",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://efs010.effacts.com/effacts/rest/v1/CountryState?fields=id,description",
							"method": "GET",
							"headers": {
								"Content-Type": "application/json",
								"Effacts-IntegratorKey": "c2502ac2-d89b-4f8e-af8f-74767cf4d96a",
								"Effacts-Context": "684",
								"Authorization": {
									"value": "@concat('Effacts ',activity('Web1').output.token)",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"Effacts-IntegratorKey": "c2502ac2-d89b-4f8e-af8f-74767cf4d96a",
									"Effacts-Context": "684",
									"Authorization": {
										"value": "@concat('Effacts ',activity('Web1').output.token)",
										"type": "Expression"
									}
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "RestResource3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Json_web",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-04-23T11:03:32Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/http')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Json_web",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://efs010.effacts.com/effacts/rest/v2/auth/basic?integratorKey=c2502ac2-d89b-4f8e-af8f-74767cf4d96a&context=684",
							"connectVia": {
								"referenceName": "SH-IR",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "Basic",
								"username": "SER_EDL_DEV",
								"password": {
									"type": "AzureKeyVaultSecret",
									"store": {
										"referenceName": "AzureKeyVault1",
										"type": "LinkedServiceReference"
									},
									"secretName": "RESTnew"
								}
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-05-28T11:12:27Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Avro')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Avro",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "21 (1).avro",
						"container": "empty"
					}
				},
				"schema": {
					"type": "record",
					"name": "Microsoft.ServiceBus.Messaging.EventData",
					"fields": [
						{
							"name": "SequenceNumber",
							"type": "long"
						},
						{
							"name": "Offset",
							"type": "string"
						},
						{
							"name": "EnqueuedTimeUtc",
							"type": "string"
						},
						{
							"name": "SystemProperties",
							"type": {
								"type": "map",
								"values": [
									"long",
									"double",
									"string",
									"bytes"
								]
							}
						},
						{
							"name": "Properties",
							"type": {
								"type": "map",
								"values": [
									"long",
									"double",
									"string",
									"bytes",
									"null"
								]
							}
						},
						{
							"name": "Body",
							"type": [
								"null",
								"bytes"
							]
						}
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlob1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "ParquetFormat"
					},
					"fileName": "[parameters('AzureBlob1_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('AzureBlob1_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SQLPass": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "PersonID",
						"type": "Int32"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "Address",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Persons]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1_New1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "walesBank"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Empty1",
						"fileSystem": "test"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "*.pdf",
						"folderPath": "Empty2/all/WS/document",
						"fileSystem": "test"
					}
				}
			},
			"dependsOn": []
		}
	]
}